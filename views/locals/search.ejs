<div class="row">
    <div class="col">
        <h1 class="text-center">지역 검색</h1>
            <!--검색 폼-->
            <div class="row mb-2 justify-content-end">
                <form name="frm" class="col-6 col-md-4 col-lg-3">
                    <div class="input-group">
                        <input name="query" class="form-control" value="인하대학교">
                        <button class="btn btn-primary">검색</button>
                    </div>
                </form>
            </div>
        <div id="div_locals"></div>
        <!--페이지 이동 버튼-->
        <div class="text-center">
            <button id="prev" class="btn btn-primary">이전</button>
            <span id="span_page" class="mx-3"></span>
            <button id="next" class="btn btn-primary">다음</button>
        </div>
        <!--지도 출력-->
        <div id="map" style="width:100%;height:400px;" class="my-3"></div>
    </div>
</div>

<!--템플릿-->
<script type="x-handlebars-template" id="temp_locals">
    <table class="table table-striped">
        {{#each documents}}
        <tr>
            <td>{{place_name}}</td>
            <td>{{address_name}}</td>
            <td>{{phone}}</td>
            <td><button class="btn btn-primary" x="{{x}}" y="{{y}}">위치 보기</button></td>
            <td><button class="btn btn-primary btn-sm favorite" local="{{toString @this}}">즐겨찾기</button></td>
        </tr>
        {{/each}}
    </table>
</script>

<script>
    Handlebars.registerHelper("toString", function(local) {
        return JSON.stringify(local);
    });
</script>

<script type="module">
    import { app } from "/javascripts/firebase.js";
    import { getDatabase, ref, set, get } from "https://www.gstatic.com/firebasejs/10.4.0/firebase-database.js";
    const db = getDatabase(app);

    let query=$(frm.query).val();
    let page=1;
    let size=5;

    getLocals();

    //즐겨찾기 버튼 클릭
    $("#div_locals").on("click", ".favorite", async function() {
        if(sessionStorage.getItem("email")) {            
            const local=JSON.parse($(this).attr("local"));
            const ref_favorite=ref(db, `favorite/${sessionStorage.getItem("uid")}/${local.id}`);
            const snapshot = await get(ref_favorite);
            
            if(snapshot.val()) {
                alert("이미 즐겨찾기에 등록되어 있습니다.");
            } else {
                await set(ref_favorite, local);
                alert("등록되었습니다.");
            }

            console.log(local);
            //console.log(snapshot.val());
        } else {
            sessionStorage.setItem("target", "/locals");
            location.href="/users/login"
        }
    });

    //위치 보기 버튼을 클릭한 경우
    $("#div_locals").on("click", "button", function() {
        let x=$(this).attr("x");
        let y=$(this).attr("y");

		var container = document.getElementById('map');
		var options = {
			center: new kakao.maps.LatLng(y, x),
			level: 3
		};

		var map = new kakao.maps.Map(container, options);
        var markerPosition  = new kakao.maps.LatLng(y, x);  // 마커가 표시될 위치입니다 
        var marker = new kakao.maps.Marker({  // 마커를 생성합니다
            position: markerPosition
        });
        marker.setMap(map);  // 마커가 지도 위에 표시되도록 설정합니다
    });

    $(frm).on("submit", function(event) {
        event.preventDefault();

        query=$(frm.query).val()
        page=1;

        getLocals();
    });

    //다음 버튼을 클릭 한 경우
    $("#next").on("click", function() {
        page++;
        getLocals();
    });

    //이전 버튼을 클릭 한 경우
    $("#prev").on("click", function() {
        page--;
        getLocals();
    });    

    function getLocals() {
        $.ajax({
            type:"get",
            url:"https://dapi.kakao.com/v2/local/search/keyword.json",
            headers: {"Authorization":"KakaoAK 7746b320cd7ceef24bd5b51c2ac59748"},
            data:{query:query, page:page, size:size},
            success:function(data) {                
                let temp = Handlebars.compile($("#temp_locals").html());
                let html = temp(data);

                $("#div_locals").html(html);

                let lastPage = Math.ceil(data.meta.pageable_count / size);
                $("#span_page").html(page + " / " + lastPage);

                if(page == 1) $("#prev").attr("disabled", true);
                else $("#prev").attr("disabled", false);

                if(data.meta.is_end) $("#next").attr("disabled", true);
                else $("#next").attr("disabled", false);
            }
        });
    }
</script>